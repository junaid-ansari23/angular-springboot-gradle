buildscript {
	ext {
		springBootVersion = '1.5.4.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

plugins {
    id 'java'
    id 'war'
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'application'

version = '1.0'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
	jcenter()
}


dependencies {

	testCompile group: 'junit', name: 'junit', version: '4.12'
    compile group: 'com.google.guava', name: 'guava', version: '29.0-jre'
    compile group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.12'

    compile 'org.apache.logging.log4j:log4j-api:2.9.0'
    compile 'org.apache.logging.log4j:log4j-core:2.9.0'

	//new dependencies
	compile group: 'com.fasterxml.jackson.dataformat', name: 'jackson-dataformat-yaml', version: '2.11.1'
	compile group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.11.1'
	
	//spring boot
	compile('org.springframework.boot:spring-boot-starter-web')
	testCompile('org.springframework.boot:spring-boot-starter-test')
}

def webappDir = "$projectDir/src/main/webapp"
sourceSets {
	main {
		resources {
			srcDirs = ["$webappDir/dist", "$projectDir/src/main/resources"]
		}
	}
}

mainClassName  = 'com.sample.springboot.DashBoardBootApplication'

processResources {
	dependsOn "buildAngular"
}

task buildAngular(type:Exec) {
	dependsOn "installAngular"
	workingDir "$webappDir"
	inputs.dir "$webappDir"
	group = BasePlugin.BUILD_GROUP
//	outputs.dir "$webappDir/dist"
	if (System.getProperty("os.name").toUpperCase().contains("WINDOWS")){
		commandLine "ng.cmd", "build"
	} else {
		commandLine "ng", "build"
	}
}

task installAngular(type:Exec) {
	workingDir "$webappDir"
	inputs.dir "$webappDir"
	group = BasePlugin.BUILD_GROUP
//	outputs.dir "$webappDir/dist"
	if (System.getProperty("os.name").toUpperCase().contains("WINDOWS")){
		commandLine "npm.cmd", "install", "--no-optional", "--no-shrinkwrap"
	} else {
		commandLine "npm", "install", "--no-optional", "--no-shrinkwrap"
	}
}
